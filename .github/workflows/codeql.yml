name: Code Quality and Security Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  analysis:
    name: Run Codacy, CodeQL, and SOOS Scans
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Codacy Static Analysis
      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@master
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

      # CodeQL Setup
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      # Prepare CodeQL SARIF for SOOS or other tools
      - name: Prepare CodeQL SARIF for SOOS
        run: |
          CODEQL_LANG_SARIF="codeql-results/javascript.sarif"
          SOOS_REQUIRED_JSON="codeql-results/javascript.sarif.json"

          echo "Checking for CodeQL SARIF at: $CODEQL_LANG_SARIF"

          if [ -f "$CODEQL_LANG_SARIF" ]; then
            cp "$CODEQL_LANG_SARIF" "$SOOS_REQUIRED_JSON"
            echo "Successfully copied to $SOOS_REQUIRED_JSON for SOOS."
          else
            echo "CRITICAL ERROR: CodeQL SARIF file NOT FOUND at $CODEQL_LANG_SARIF."
            exit 1
          fi

      # SOOS SCA Scan (no SBOM export to avoid license error)
      - name: Run SOOS SCA Scan
        uses: soos-io/soos-sca-github-action@v2
        with:
          project_name: "${{ github.repository }}"
          client_id: ${{ secrets.SOOS_CLIENT_ID }}
          api_key: ${{ secrets.SOOS_API_KEY }}
          log_level: "INFO"
          on_failure: "continue_on_failure"
