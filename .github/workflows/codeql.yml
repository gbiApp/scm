# .github/workflows/codeql-analysis.yml

name: "CodeQL"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '30 1 * * 0'

permissions:
  contents: read
  security-events: write

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    
    steps:
      - name: üì¶ Checkout repository
        uses: actions/checkout@v4
        
      # 1. Setup CodeQL (REQUIRED)
      - name: üèóÔ∏è Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }} # or list your languages, e.g., 'javascript,python'

      # 2. Autobuild or Custom Build (REQUIRED for compiled languages)
      - name: ‚öôÔ∏è Autobuild
        uses: github/codeql-action/autobuild@v3

      # 3. Perform CodeQL Analysis and Save SARIF (REQUIRED)
      # This step runs the analysis and saves the results in the database directory.
      - name: üîç Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        # Specify a path to save the SARIF file (e.g., in a directory named 'codeql-results')
        with:
          output: codeql-results 
          
      # --- START OF FIX: SOOS INGESTION ---

      - name: ‚¨ÜÔ∏è Upload CodeQL SARIF to SOOS
        # Run this step only if the CodeQL analysis was successful
        if: success() || failure()
        uses: soos-io/soos-sast-github-action@v1 # Check SOOS documentation for latest version
        with:
          client_id: ${{ secrets.SOOS_CLIENT_ID }}
          api_key: ${{ secrets.SOOS_API_KEY }}
          project_name: ${{ github.repository }} 
          build_version: ${{ github.sha }}
          # üö® The CodeQL action saves the SARIF file as '<language>.sarif' 
          # in the specified 'output' directory. We must pass the correct path to SOOS.
          # For a single-language repo, the path is typically: <output_dir>/<language>.sarif
          # NOTE: You may need to adjust the path if you use a matrix build or multiple languages.
          scan_file: codeql-results/javascript.sarif # <<-- CRITICAL: ADJUST 'javascript' to your primary language 
          scan_type: SARIF # This tells SOOS the file is in SARIF format
          
      # --- END OF FIX ---

      # 4. Upload SARIF to GitHub Security Tab (EXISTING STEP)
      # This step is what makes the findings show in the GitHub Security tab.
      - name: üì¶ Upload CodeQL SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: codeql-results/*.sarif # Uploads all SARIF files generated in step 3
